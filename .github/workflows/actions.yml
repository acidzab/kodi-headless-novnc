name: Build Images

on: 
  workflow_dispatch:
    inputs:
      version:
        description: 'The Kodi version'
        required: true
        type: string
        default: '21.0'
      codename:
        description: 'The Kodi codename'
        required: true
        type: string
        default: 'Omega'
      tag_latest:
        description: 'Tag as latest'
        required: true
        type: boolean
      tag_master:
        description: 'Build master'
        required: true
        type: boolean

jobs:
  build_amd64:
    uses: ./.github/workflows/build.yml
    with:
      runs_on: ubuntu-22.04
      platform: linux/amd64
      tag: amd64
      version: ${{ github.event.inputs.tag_master == 'true' && 'master' || format('{0}', github.event.inputs.version) }}
      codename: ${{ github.event.inputs.tag_master == 'true' && 'master' || format('{0}', github.event.inputs.codename) }}
    secrets: inherit

  build_arm64:
    uses: ./.github/workflows/build.yml
    with:
      runs_on: ubuntu-22.04-arm
      platform: linux/arm64
      tag: arm64
      version: ${{ github.event.inputs.tag_master == 'true' && 'master' || format('{0}', github.event.inputs.version) }}
      codename: ${{ github.event.inputs.tag_master == 'true' && 'master' || format('{0}', github.event.inputs.codename) }}
    secrets: inherit

  build_arm32:
    uses: ./.github/workflows/build.yml
    with:
      runs_on: ubuntu-22.04-arm
      platform: linux/arm/v7
      tag: arm32
      version: ${{ github.event.inputs.tag_master == 'true' && 'master' || format('{0}', github.event.inputs.version) }}
      codename: ${{ github.event.inputs.tag_master == 'true' && 'master' || format('{0}', github.event.inputs.codename) }}
      cflags: '-march=armv7-a -mfpu=neon-vfpv4 -mfloat-abi=hard -mvectorize-with-neon-quad'
      with_cpu: '-DWITH_CPU=arm'
    secrets: inherit

  combine:
    needs: [build_amd64, build_arm64, build_arm32]
    runs-on: ubuntu-22.04
    steps:
      -
        name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - 
        name: Create and push manifest images
        uses: int128/docker-manifest-create-action@v2
        with:
          tags: |
            smaoloni/kodi-headless-novnc:${{ github.event.inputs.version }}
            smaoloni/kodi-headless-novnc:${{ github.event.inputs.codename }}
            ${{ (github.event.inputs.tag_latest == 'true' && 'smaoloni/kodi-headless-novnc:latest') || '' }}
            ${{ (github.event.inputs.tag_master == 'true' && 'smaoloni/kodi-headless-novnc:master') || '' }}
          sources: |
            smaoloni/kodi-headless-novnc:${{ github.event.inputs.version }}-amd64
            smaoloni/kodi-headless-novnc:${{ github.event.inputs.version }}-arm64
            smaoloni/kodi-headless-novnc:${{ github.event.inputs.version }}-arm32

  test:
    needs: [combine]
    runs-on: ubuntu-22.04
    container:
      image: smaoloni/kodi-headless-novnc:${{ github.event.inputs.version }}
    steps:
      -
        name: Check Missing Libraries
        run: |
          ldd /usr/lib/kodi/kodi-x11 | ( ! grep -i "not found" )
